	void dfs(int node,vector<bool>&visited,stack<int>&st,vector<int> adj[]){
	    visited[node]=true;
	    for(auto it:adj[node])
	        if(!visited[it])
	            dfs(it,visited,st,adj);
	    st.push(node);
	}
	
	vector<int> topoSort(int V, vector<int> adj[]){
	    // code here
	    queue<int>q;
	    vector<int>indegree(V,0);
	    vector<int>ans;
	    for(int i=0;i<V;i++)
	        for(auto it:adj[i])
	            indegree[it]++;
	            
	    for(int i=0;i<V;i++)
	        if(indegree[i]==0)
	            q.push(i);
	            
	    while(!q.empty()){
	        int node=q.front();
	        q.pop();
	        ans.push_back(node);
	        for(auto it:adj[node]){
	            indegree[it]--;
	            if(indegree[it]==0)
	                q.push(it);
	        }
	    }
	    return ans;
	}
