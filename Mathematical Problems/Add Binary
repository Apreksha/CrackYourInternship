class Solution {
public:
    string addBinary(string a, string b) {
        
        int n=a.length(), m=b.length();
        string ans;
        int i=n-1,j=m-1,carry=0;

        while(i>=0 || j>=0){
            char x='2',y='2';
            if (i>=0)
                x=a[i];
            if (j>=0)
                y=b[j];
            
            if(x=='1' && y=='1'){
                if(carry==0)
                    ans.push_back('0');
                else
                    ans.push_back('1');
                carry=1;
            }
            else if((x=='1' && y=='0') || (x=='0' && y=='1')){
                if(carry==0)
                    ans.push_back('1');
                else{
                    ans.push_back('0');
                    carry=1;
                }
            }
            
            else if(x=='0' && y=='0'){
                if(carry==1){
                    ans.push_back('1');
                    carry=0;
                }
                else
                    ans.push_back('0');
            }
            
            else if(y=='2'){
                if(carry==0)
                    ans.push_back(x);
                
                else{
                    if(x=='1'){
                        ans.push_back('0');
                        carry=1;
                    }
                    else if(x=='0'){
                        ans.push_back('1');
                        carry=0;
                    }
                }
            }
            
            else if(x=='2'){
                if(carry==0)
                    ans.push_back(y);
                
                else{
                    if(y=='1'){
                        ans.push_back('0');
                        carry=1;
                    }
                    else if(y=='0'){
                        ans.push_back('1');
                        carry=0;
                    }
                }
            }
            
            
            i--;
            j--;
        }
        
        if(carry==1)
            ans.push_back('1');
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
