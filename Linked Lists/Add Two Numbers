/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *temp1=l1, *prev=NULL, *temp2=l2;
        int carry=0;
        
        while(temp1!=NULL || temp2!=NULL){
            int sum=0;
            if(temp1!=NULL)
                sum+=temp1->val;
            if(temp2!=NULL)
                sum+=temp2->val;
            sum+=carry;
            carry=sum/10;
            sum=sum%10;
            
            if(temp1==NULL){
                ListNode *newnode=new ListNode(sum);
                prev->next=newnode;
                prev=newnode;
            }
            else
                temp1->val=sum;
            
            if(temp1!=NULL){
                prev=temp1;
                temp1=temp1->next;
            }
            if(temp2!=NULL)
                temp2=temp2->next;
            
        }
        if(carry==1){
            ListNode *newnode=new ListNode(1);
            prev->next=newnode;
        }
        return l1;
    }
};
