class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        if(nums.size()<=1)
            return -1;
        int slow=nums[0];
        int fast=nums[nums[0]];
        while(slow!=fast){
            fast=nums[nums[fast]];
            slow=nums[slow];
        }
        fast=0;
        while(fast!=slow){
            fast=nums[fast];
            slow=nums[slow];
        }
        return slow;
    }
};

Example: [1,3,4,2,2]
Taking 2 pointers: fast and slow
Initialisation: fast=3 and slow=1
While slow!=fast
  Iteration1: fast=4
              slow=3
  Iteration2: fast=4
              slow=2
  Iteration3: fast=4
              slow=4
  here slow=fast so break the loop

Reinitialise fast=0 and slow remains same as 4

While slow!=fast
  Iteration1: fast=1
              slow=2
  Iteration2: fast=3
              slow=4
  Iteration3: fast=2
              slow=2
  here slow=fast so break the loop

Return slow as that is pointing to the repeated value in the array.
