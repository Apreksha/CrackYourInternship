    void dfs(int i,int j,vector<vector<char>>&grid,vector<vector<bool>>&visited,int n,int m){
        if(i<0 || j<0 || i>=n || j>=m)
            return;
        if(grid[i][j]=='0') 
            return;
        if(!visited[i][j]){
            visited[i][j]=true;
            dfs(i,j-1,grid,visited,n,m);
            dfs(i,j+1,grid,visited,n,m);
            dfs(i-1,j,grid,visited,n,m);
            dfs(i+1,j,grid,visited,n,m);
            dfs(i+1,j-1,grid,visited,n,m);
            dfs(i-1,j-1,grid,visited,n,m);
            dfs(i+1,j+1,grid,visited,n,m);
            dfs(i-1,j+1,grid,visited,n,m);
        }
    }
    
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        int c=0,n=grid.size(),m=grid[0].size();
        vector<vector<bool>>visited(n,vector<bool>(m,false));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!visited[i][j] && grid[i][j]=='1'){
                    dfs(i,j,grid,visited,n,m);
                    c++;
                }
            }
        }
        return c;
    }
